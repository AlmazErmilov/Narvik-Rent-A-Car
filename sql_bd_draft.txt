-- Создание базы данных
CREATE DATABASE IF NOT EXISTS rent_car_system;
USE rent_car_system;

-- Таблица локаций
CREATE TABLE Locations (
    LocationID INT PRIMARY KEY AUTO_INCREMENT,
    City VARCHAR(100) NOT NULL,
    Place VARCHAR(255) NOT NULL,
    Address VARCHAR(255),
    PostalCode VARCHAR(20),
    Comments TEXT,
    IsActive BOOLEAN DEFAULT TRUE
);

-- Таблица автомобилей
CREATE TABLE Cars (
    CarID INT PRIMARY KEY AUTO_INCREMENT,
    Make VARCHAR(50) NOT NULL,
    Model VARCHAR(50) NOT NULL,
    Year INT NOT NULL,
    Color VARCHAR(30),
    LicensePlate VARCHAR(20) UNIQUE NOT NULL,
    VIN VARCHAR(17) UNIQUE NOT NULL,
    Transmission ENUM('Manual', 'Automatic') NOT NULL,
    FuelType ENUM('Petrol', 'Diesel', 'Electric', 'Hybrid') NOT NULL,
    Category ENUM('Sedan', 'SUV', 'Hatchback', 'Station Wagon', 'Van') NOT NULL,
    Seats INT NOT NULL,
    DailyRate DECIMAL(10, 2) NOT NULL,
    Status ENUM('Available', 'Rented', 'Maintenance', 'Out of Service', 'Pre-booked') NOT NULL,
    LastMaintenanceDate DATE,
    Mileage INT NOT NULL,
    Comments TEXT
);

-- Таблица клиентов
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    Phone VARCHAR(20),
    Address VARCHAR(255),
    DateOfBirth DATE NOT NULL,
    LicenseNumber VARCHAR(50) UNIQUE NOT NULL,
    LicenseExpiryDate DATE NOT NULL,
    DrivingLicenseImage VARCHAR(255)
);

-- Таблица бронирований
CREATE TABLE Bookings (
    BookingID INT PRIMARY KEY AUTO_INCREMENT,
    CustomerID INT NOT NULL,
    CarID INT NOT NULL,
    PickupLocationID INT NOT NULL,
    ReturnLocationID INT NOT NULL,
    StartDateTime DATETIME NOT NULL,
    EndDateTime DATETIME NOT NULL,
    TotalCost DECIMAL(10, 2) NOT NULL,
    Status ENUM('Pending', 'Confirmed', 'Cancelled', 'Completed') NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Comments TEXT,
    ClientComments TEXT,
    ContractSent BOOLEAN DEFAULT FALSE,
    ContractSentDate DATETIME,
    ContractFile VARCHAR(255),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (CarID) REFERENCES Cars(CarID),
    FOREIGN KEY (PickupLocationID) REFERENCES Locations(LocationID),
    FOREIGN KEY (ReturnLocationID) REFERENCES Locations(LocationID)
);

-- Таблица платежей
CREATE TABLE Payments (
    PaymentID INT PRIMARY KEY AUTO_INCREMENT,
    BookingID INT NOT NULL,
    Amount DECIMAL(10, 2) NOT NULL,
    PaymentDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PaymentMethod ENUM('Credit Card', 'Debit Card', 'Cash', 'Bank Transfer') NOT NULL,
    PaymentLink VARCHAR(255),
    Status ENUM('Pending', 'Completed', 'Failed'),
    FOREIGN KEY (BookingID) REFERENCES Bookings(BookingID)
);

-- Таблица дополнительных услуг
CREATE TABLE AdditionalServices (
    ServiceID INT PRIMARY KEY AUTO_INCREMENT,
    ServiceName VARCHAR(100) NOT NULL,
    Description TEXT,
    Cost DECIMAL(10, 2) NOT NULL
);

-- Таблица связи бронирований и дополнительных услуг
CREATE TABLE BookingServices (
    BookingID INT,
    ServiceID INT,
    PRIMARY KEY (BookingID, ServiceID),
    FOREIGN KEY (BookingID) REFERENCES Bookings(BookingID),
    FOREIGN KEY (ServiceID) REFERENCES AdditionalServices(ServiceID)
);

-- Таблица технического обслуживания
CREATE TABLE Maintenance (
    MaintenanceID INT PRIMARY KEY AUTO_INCREMENT,
    CarID INT NOT NULL,
    MaintenanceDate DATE NOT NULL,
    Description TEXT,
    Cost DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (CarID) REFERENCES Cars(CarID)
);

-- Таблица страховых случаев
CREATE TABLE Insurance (
    InsuranceID INT PRIMARY KEY AUTO_INCREMENT,
    BookingID INT NOT NULL,
    IncidentDate DATE NOT NULL,
    Description TEXT,
    Cost DECIMAL(10, 2),
    Status ENUM('Reported', 'In Progress', 'Resolved') NOT NULL,
    FOREIGN KEY (BookingID) REFERENCES Bookings(BookingID)
);

-- Таблица отзывов
CREATE TABLE Reviews (
    ReviewID INT PRIMARY KEY AUTO_INCREMENT,
    BookingID INT NOT NULL,
    Rating INT CHECK (Rating >= 1 AND Rating <= 5),
    Comment TEXT,
    ReviewDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (BookingID) REFERENCES Bookings(BookingID)
);
